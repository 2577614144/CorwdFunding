<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
	    http://www.springframework.org/schema/aop
	    http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

    <!-- 事务管理器：控制着数据源 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 开启事务注解驱动 -->
    <tx:annotation-driven transaction-manager="txManager"/>

    <!-- 配置事务切面策略 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <!-- 事务属性 -->
        <tx:attributes>
            <!-- 增删改方法：配置事务传播行为、回滚异常、超时 -->
            <!--
                propagation属性：
                    REQUIRED：默认值，表示当前方法必须工作在事务中，如果当前线程上没有已经开启的事务，则自己开新事务。如果已经有了，那么就使用这个已有的事务。
                        顾虑：用别人的事务有可能“被”回滚。
                    REQUIRES_NEW：建议使用的值，表示不管当前线程上有没有事务，都要自己开事务，在自己的事务中运行。
                        好处：不会受到其他事务回滚的影响。
             -->
            <!--
                rollback-for属性：配置事务方法针对什么样的异常回滚
                    默认：运行时异常回滚
                    建议：编译时异常和运行时异常都回滚
             -->
            <tx:method name="insert*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception" timeout="5000"/>
            <tx:method name="add*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception" timeout="5000"/>
            <tx:method name="update*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception" timeout="5000"/>
            <tx:method name="delete*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception" timeout="5000"/>

            <!-- 查询方法：配置只读属性，让数据库知道这是一个查询操作，能够进行一定优化 -->
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="list*" read-only="true"/>

            <!-- 其它方法 -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置事务控制的范围（切面） -->
    <aop:config>
        <!--
            *     任意返回值
                  service包下
            ..    service下的任意包
            *     任意类
            .*    任意方法
            (..)  任意参数
        -->
        <aop:pointcut expression="execution(* com.atguigu.crowd.service..*.*(..))" id="point"/>
        <!-- advice-ref：关联增强事务 pointcut-ref：关联事务的切入点 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="point"/>
    </aop:config>
</beans>
